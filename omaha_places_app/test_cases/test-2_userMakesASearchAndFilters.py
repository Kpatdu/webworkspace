# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestUserMakesASearchAndFilters():
  def setup_method(self, method):
      self.driver = webdriver.Firefox()
      self.driver.maximize_window()
      self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_userMakesASearchAndFilters(self):
    self.driver.get("http://localhost:8000/")
    self.driver.maximize_window()
    wait = WebDriverWait(self.driver, 50)

    # User makes a search
    self.driver.find_element(By.NAME, "name_contains").click()
    time.sleep(2)
    self.driver.find_element(By.NAME, "name_contains").send_keys("cafe")
    time.sleep(2)
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    time.sleep(2)

    # User filters, add "cafe" category
    self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(8) > input").click() # Select cafe category
    price_min = wait.until(EC.element_to_be_clickable((By.ID, "priceMin")))
    self.driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", price_min)
    time.sleep(2)
    self.driver.execute_script("arguments[0].click();", price_min)

    # Add min rating
    rating_min = wait.until(EC.element_to_be_clickable((By.ID, "ratingMin")))
    self.driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", rating_min)
    time.sleep(2)
    self.driver.execute_script("arguments[0].click();", rating_min)

    self.driver.find_element(By.ID, "ratingMin").send_keys("3")
    time.sleep(2)

    # Search
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary").click()
    time.sleep(2)

    # Clear filters
    clear_filters = wait.until(EC.element_to_be_clickable((By.LINK_TEXT, "Clear Filters")))
    self.driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", clear_filters)
    time.sleep(2)
    self.driver.execute_script("arguments[0].click();", clear_filters)
    time.sleep(4)
    self.driver.close()