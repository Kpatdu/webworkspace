# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestDelComment():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_delComment(self):
    self.driver.get("http://127.0.0.1:8000/restaurants/1/")
    self.driver.maximize_window()
    wait = WebDriverWait(self.driver, 20)

    # Wait for full page load
    wait.until(lambda driver: driver.execute_script('return document.readyState') == 'complete')

    # User Logins
    login = wait.until(EC.element_to_be_clickable((By.LINK_TEXT, "LOGIN")))
    self.driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", login)
    login.click()
    time.sleep(2)

    wait.until(EC.presence_of_element_located((By.ID, "id_username")))
    self.driver.find_element(By.ID, "id_username").send_keys("admin")
    self.driver.find_element(By.ID, "id_password").send_keys("!password")
    self.driver.find_element(By.CSS_SELECTOR, ".me-3").click()
    time.sleep(2)

    # User deletes comment
    delcomment = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".btn-danger")))
    self.driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", delcomment)
    time.sleep(2)
    self.driver.execute_script("arguments[0].click();", delcomment)
    time.sleep(2)

    # View empty comment section
    makecomment = wait.until(EC.element_to_be_clickable((By.ID, "id_text")))
    self.driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", makecomment)
    time.sleep(3)
    self.driver.close()
  
